"""add containment

Revision ID: e5ab6ba583e2
Revises: 40ff2173620b
Create Date: 2024-01-08 08:49:20.203956

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e5ab6ba583e2'
down_revision: Union[str, None] = '40ff2173620b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('containment_base_rule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rule_class', sa.VARCHAR(), nullable=False),
    sa.Column('rule_name', sa.VARCHAR(), nullable=False),
    sa.Column('virtual_factory', sa.VARCHAR(), nullable=False),
    sa.Column('rule_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('rule_sql', sa.VARCHAR(), nullable=True),
    sa.Column('containment_object_type', sa.VARCHAR(), nullable=False),
    sa.Column('changeable', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_time', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=False),
    sa.Column('updated_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['test.user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['test.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test'
    )
    op.create_index(op.f('ix_test_containment_base_rule_created_by'), 'containment_base_rule', ['created_by'], unique=False, schema='test')
    op.create_index(op.f('ix_test_containment_base_rule_rule_class'), 'containment_base_rule', ['rule_class'], unique=False, schema='test')
    op.create_index(op.f('ix_test_containment_base_rule_rule_name'), 'containment_base_rule', ['rule_name'], unique=True, schema='test')
    op.create_index(op.f('ix_test_containment_base_rule_updated_by'), 'containment_base_rule', ['updated_by'], unique=False, schema='test')
    op.create_table('containment_rule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rule_name', sa.VARCHAR(), nullable=False),
    sa.Column('rule_description', sa.VARCHAR(), nullable=False),
    sa.Column('containment_object_type', sa.VARCHAR(), nullable=False),
    sa.Column('changeable', sa.Boolean(), nullable=True),
    sa.Column('rule_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_time', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=False),
    sa.Column('updated_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['test.user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['test.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test'
    )
    op.create_index(op.f('ix_test_containment_rule_rule_name'), 'containment_rule', ['rule_name'], unique=False, schema='test')
    op.create_table('containment_rule_base_rule',
    sa.Column('base_rule_id', sa.Integer(), nullable=True),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_rule_id'], ['test.containment_base_rule.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['test.containment_rule.id'], ),
    schema='test'
    )
    op.create_index('ix_base_rule_id', 'containment_rule_base_rule', ['base_rule_id'], unique=False, schema='test')
    op.create_index('ix_rule_id', 'containment_rule_base_rule', ['rule_id'], unique=False, schema='test')
    op.create_table('containment_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('object_type', sa.VARCHAR(), nullable=True),
    sa.Column('object_id', sa.VARCHAR(), nullable=True),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('containment_time', sa.DateTime(), nullable=False),
    sa.Column('time_cost', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['test.containment_rule.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('containment_stats', schema='test')
    op.drop_index('ix_rule_id', table_name='containment_rule_base_rule', schema='test')
    op.drop_index('ix_base_rule_id', table_name='containment_rule_base_rule', schema='test')
    op.drop_table('containment_rule_base_rule', schema='test')
    op.drop_index(op.f('ix_test_containment_rule_rule_name'), table_name='containment_rule', schema='test')
    op.drop_table('containment_rule', schema='test')
    op.drop_index(op.f('ix_test_containment_base_rule_updated_by'), table_name='containment_base_rule', schema='test')
    op.drop_index(op.f('ix_test_containment_base_rule_rule_name'), table_name='containment_base_rule', schema='test')
    op.drop_index(op.f('ix_test_containment_base_rule_rule_class'), table_name='containment_base_rule', schema='test')
    op.drop_index(op.f('ix_test_containment_base_rule_created_by'), table_name='containment_base_rule', schema='test')
    op.drop_table('containment_base_rule', schema='test')
    # ### end Alembic commands ###
